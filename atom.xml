<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>不知</title>
  
  <subtitle>知之为知之，不知为不知</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://jscoder.com/"/>
  <updated>2021-07-20T14:53:34.155Z</updated>
  <id>https://jscoder.com/</id>
  
  <author>
    <name>Yao</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>重构 uniapp 项目(1)：浅浅理解 uniapp</title>
    <link href="https://jscoder.com/2021/07/20/front-end/refactoring-deep-in-uniapp/"/>
    <id>https://jscoder.com/2021/07/20/front-end/refactoring-deep-in-uniapp/</id>
    <published>2021-07-20T15:30:00.000Z</published>
    <updated>2021-07-20T14:53:34.155Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;  uniapp 在业内名气口碑都挺不错的，选择这个框架，能够让开发者快速出活，依托 vue 的生态，相关开发者也多，企业也容易招聘。然而小程序和web毕竟还是有点区别，某些时候还是需要对uniapp 有一定的理解，才能够顺利的搬砖。本篇，我们尝试解决 uniapp
        
      
    
    </summary>
    
    
      <category term="前端" scheme="https://jscoder.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="小程序" scheme="https://jscoder.com/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>重构 uniapp 项目(0)：相信自己</title>
    <link href="https://jscoder.com/2021/07/16/front-end/refactoring-believe-yourself/"/>
    <id>https://jscoder.com/2021/07/16/front-end/refactoring-believe-yourself/</id>
    <published>2021-07-15T22:00:00.000Z</published>
    <updated>2021-07-20T14:53:34.155Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;  重构不是一个好活，需要对技术和业务的多重理解，重构又是一个好活，能够站在更加全然的高度，去俯视项目，给项目做手术。&lt;/p&gt;
&lt;h2 id=&quot;前端重构&quot;&gt;&lt;a href=&quot;#前端重构&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
    
      <category term="前端" scheme="https://jscoder.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="小程序" scheme="https://jscoder.com/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>ts 方法装饰器</title>
    <link href="https://jscoder.com/2021/07/12/front-end/method-decorator/"/>
    <id>https://jscoder.com/2021/07/12/front-end/method-decorator/</id>
    <published>2021-07-12T15:30:00.000Z</published>
    <updated>2021-07-20T14:53:34.155Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;装饰器在java中叫注解，体现了面向切面（AOP）的编程思想。&lt;/p&gt;
&lt;h2 id=&quot;方法装饰器&quot;&gt;&lt;a href=&quot;#方法装饰器&quot; class=&quot;headerlink&quot; title=&quot;方法装饰器&quot;&gt;&lt;/a&gt;方法装饰器&lt;/h2&gt;&lt;pre class=&quot;
        
      
    
    </summary>
    
    
      <category term="前端" scheme="https://jscoder.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="typescript" scheme="https://jscoder.com/tags/typescript/"/>
    
  </entry>
  
  <entry>
    <title>git merge --squash</title>
    <link href="https://jscoder.com/2021/07/07/tool/git-squash-merge/"/>
    <id>https://jscoder.com/2021/07/07/tool/git-squash-merge/</id>
    <published>2021-07-07T00:00:00.000Z</published>
    <updated>2021-07-20T14:53:34.155Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;在开发过程中，git squash merge 是个比较低频使用的命令，这也是一个比较危险的命令（操作 git 记录），如果你不明白他的真实用途，建议不要使用。&lt;/p&gt;
&lt;h2 id=&quot;场景&quot;&gt;&lt;a href=&quot;#场景&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
    
      <category term="工具" scheme="https://jscoder.com/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="git" scheme="https://jscoder.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>在 uniapp 中使用小程序ui组件库（mini-ali-ui-rpx）</title>
    <link href="https://jscoder.com/2021/06/17/front-end/use-mini-ali-ui-rpx-in-uniapp/"/>
    <id>https://jscoder.com/2021/06/17/front-end/use-mini-ali-ui-rpx-in-uniapp/</id>
    <published>2021-06-16T22:00:00.000Z</published>
    <updated>2021-07-20T14:53:34.155Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;uniapp 提供了很多开箱即用的特性，但是业务开发中，好像很少使用原生的小程序组件，这个特性是支持的。从 uniapp 开发者角度，支持原生小程序特性有利于开发者对现有的小程序做快速迁移，能够兼容社区绝大多数 ui 组件库。&lt;/p&gt;
&lt;h2
        
      
    
    </summary>
    
    
      <category term="前端" scheme="https://jscoder.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="小程序" scheme="https://jscoder.com/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>深入理解 ts 中的 utility 类型</title>
    <link href="https://jscoder.com/2021/05/25/front-end/typescript-utility-types/"/>
    <id>https://jscoder.com/2021/05/25/front-end/typescript-utility-types/</id>
    <published>2021-05-24T23:30:00.000Z</published>
    <updated>2021-07-20T14:53:34.155Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;平时开发中，有些场景总有种蹩手蹩脚的感觉，看到 Utility Types 才知道自己 native 了，很多场景 ts 都帮我们想好了。&lt;/p&gt;
&lt;h2 id=&quot;Partial&quot;&gt;&lt;a href=&quot;#Partial&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
    
      <category term="前端" scheme="https://jscoder.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="Typescript" scheme="https://jscoder.com/tags/Typescript/"/>
    
  </entry>
  
  <entry>
    <title>运动步数修改器 web 版本</title>
    <link href="https://jscoder.com/2021/05/22/front-end/sync-movement-steps/"/>
    <id>https://jscoder.com/2021/05/22/front-end/sync-movement-steps/</id>
    <published>2021-05-22T15:30:00.000Z</published>
    <updated>2021-07-20T14:53:34.155Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;&lt;img src=&quot;/images/16216988358049.jpg&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
    
      <category term="前端" scheme="https://jscoder.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="工具" scheme="https://jscoder.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>【支付宝小程序】我们常用的 &#39;my&#39; 是什么？</title>
    <link href="https://jscoder.com/2021/04/24/front-end/mini-my/"/>
    <id>https://jscoder.com/2021/04/24/front-end/mini-my/</id>
    <published>2021-04-24T09:00:00.000Z</published>
    <updated>2021-07-20T14:53:34.155Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;支付宝小程序开发中我们使用的 &lt;code&gt;my&lt;/code&gt; 其实就是 jsbrige
        
      
    
    </summary>
    
    
      <category term="前端" scheme="https://jscoder.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="小程序" scheme="https://jscoder.com/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>封装小程序分页组件 waterflow-list</title>
    <link href="https://jscoder.com/2021/04/18/front-end/mini-waterflow-list/"/>
    <id>https://jscoder.com/2021/04/18/front-end/mini-waterflow-list/</id>
    <published>2021-04-18T13:00:00.000Z</published>
    <updated>2021-07-20T14:53:34.155Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;小程序开发中，列表分页组件是比较常见的需求，每次都要写 totalNum、pageSize、loading 状态等，写得多了，始终觉得很麻烦，萌生了封装一个容器组件的念头。&lt;/p&gt;
&lt;h2 id=&quot;需求&quot;&gt;&lt;a href=&quot;#需求&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
    
      <category term="前端" scheme="https://jscoder.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="小程序" scheme="https://jscoder.com/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>前端 font 优化</title>
    <link href="https://jscoder.com/2021/04/11/front-end/font/"/>
    <id>https://jscoder.com/2021/04/11/front-end/font/</id>
    <published>2021-04-11T08:00:00.000Z</published>
    <updated>2021-07-20T14:53:34.155Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;开发中，一般直接引入字体，使用即可，似乎字体本身并没有很多可以说道的地方，其实不然。字体本身涉及到印刷工业，是一个历史悠久的行业，css 字体的大部分属性都可以在印刷工业中找到映射。这篇博客，整理常见的字体使用细节。&lt;/p&gt;
&lt;h2 id=&quot;衬线体和非衬线体&quot;&gt;&lt;a
        
      
    
    </summary>
    
    
      <category term="前端" scheme="https://jscoder.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="css" scheme="https://jscoder.com/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>js 中 setTimeout 计时器最大值</title>
    <link href="https://jscoder.com/2021/03/23/front-end/settimeout/"/>
    <id>https://jscoder.com/2021/03/23/front-end/settimeout/</id>
    <published>2021-03-22T23:00:00.000Z</published>
    <updated>2021-07-20T14:53:34.155Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;项目中踩坑，记录下。&lt;br&gt;没有意识到 &lt;code&gt;setTimeout/setInterval&lt;/code&gt; 计时器有最大值问题。&lt;/p&gt;
&lt;pre class=&quot; language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span
        
      
    
    </summary>
    
    
      <category term="前端" scheme="https://jscoder.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="js" scheme="https://jscoder.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>vuex 4.0 源码解析</title>
    <link href="https://jscoder.com/2021/03/10/front-end/vuex-4.0-source/"/>
    <id>https://jscoder.com/2021/03/10/front-end/vuex-4.0-source/</id>
    <published>2021-03-10T14:40:00.000Z</published>
    <updated>2021-07-20T14:53:34.155Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;vuex 源码短小精悍，很短时间就可以大致浏览一遍，值得学习。在后续看其他框架的过程中，也发现很多框架都有参考 vuex（比如 herbjs 的插件体系）。&lt;/p&gt;
&lt;h2 id=&quot;猜想&quot;&gt;&lt;a href=&quot;#猜想&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
    
      <category term="前端" scheme="https://jscoder.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="源码" scheme="https://jscoder.com/tags/%E6%BA%90%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>docker 简易入门</title>
    <link href="https://jscoder.com/2020/12/17/ops/easy-docker/"/>
    <id>https://jscoder.com/2020/12/17/ops/easy-docker/</id>
    <published>2020-12-17T15:00:00.000Z</published>
    <updated>2021-07-20T14:53:34.155Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;&lt;img src=&quot;/images/20180125141147_61638d31e51d85f2a5d62e04191fe55f_1.jpg&quot; alt=&quot;齐天大圣孙悟空&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;拔一根毫毛，吹出猴万个。他叫孙悟空，也叫
        
      
    
    </summary>
    
    
    
      <category term="docker" scheme="https://jscoder.com/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>从 Tailwind 看 css 中的原子化流变</title>
    <link href="https://jscoder.com/2020/12/14/front-end/atomic-in-tailwindcss/"/>
    <id>https://jscoder.com/2020/12/14/front-end/atomic-in-tailwindcss/</id>
    <published>2020-12-14T15:00:00.000Z</published>
    <updated>2021-07-20T14:53:34.155Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;blockquote&gt;
&lt;p&gt;回不到的过去，忘不掉的人。某个路口，转角再次遇见，她还是她吗，你还是你吗？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;禅意花园&quot;&gt;&lt;a href=&quot;#禅意花园&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
    
      <category term="前端" scheme="https://jscoder.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="css" scheme="https://jscoder.com/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>弱水三千，只取一瓢 —— git cherry-pick</title>
    <link href="https://jscoder.com/2020/12/03/tool/git-cherry-pick/"/>
    <id>https://jscoder.com/2020/12/03/tool/git-cherry-pick/</id>
    <published>2020-12-03T15:00:00.000Z</published>
    <updated>2021-07-20T14:53:34.155Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h3 id=&quot;场景&quot;&gt;&lt;a href=&quot;#场景&quot; class=&quot;headerlink&quot; title=&quot;场景&quot;&gt;&lt;/a&gt;场景&lt;/h3&gt;&lt;p&gt;双主线的模式 AB，独自演进，存在一个共同的 bug，在 dev 上面修改好 bug 之后，需要合并到 AB 中，并且 A、B、dev
        
      
    
    </summary>
    
    
      <category term="工具" scheme="https://jscoder.com/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="git" scheme="https://jscoder.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>回到过去的一万种方式 —— git 时光机</title>
    <link href="https://jscoder.com/2020/12/02/tool/git-timemachine/"/>
    <id>https://jscoder.com/2020/12/02/tool/git-timemachine/</id>
    <published>2020-12-02T15:00:00.000Z</published>
    <updated>2021-07-20T14:53:34.155Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;blockquote&gt;
&lt;p&gt;时光无法倒流，git 却让我们有机会修改历史&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;查看修改历史，代码回退是开发中经常用到的命令，但是很多时候，我们并不是非常明确其中的区别。这篇博客尝试说清楚其中的区别。&lt;/p&gt;
&lt;h3
        
      
    
    </summary>
    
    
      <category term="工具" scheme="https://jscoder.com/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="git" scheme="https://jscoder.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>忘记该忘记的，记住该记住的 —— git filter-branch</title>
    <link href="https://jscoder.com/2020/12/01/tool/filter-branch/"/>
    <id>https://jscoder.com/2020/12/01/tool/filter-branch/</id>
    <published>2020-12-01T14:00:00.000Z</published>
    <updated>2021-07-20T14:53:34.155Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;Pro git 中把 &lt;code&gt;filter-branch&lt;/code&gt; 称为 &lt;strong&gt;核弹&lt;/strong&gt;，让人难以忘记，也充分说明了该命令的威力。&lt;/p&gt;
&lt;h3 id=&quot;问题场景&quot;&gt;&lt;a href=&quot;#问题场景&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
    
      <category term="工具" scheme="https://jscoder.com/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="git" scheme="https://jscoder.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>重置过去，面向未来 —— git rebase</title>
    <link href="https://jscoder.com/2020/11/30/tool/git-rebase/"/>
    <id>https://jscoder.com/2020/11/30/tool/git-rebase/</id>
    <published>2020-11-29T23:18:46.000Z</published>
    <updated>2021-07-20T14:53:34.155Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;blockquote&gt;
&lt;p&gt;git rebase 是一个危险的操作，如果不能熟练掌握，请不要使用它。（它并不是不可或缺的）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;git rebase&lt;/code&gt; 是一个平常使用较少的一个命令，这次准备分享 git
        
      
    
    </summary>
    
    
      <category term="工具" scheme="https://jscoder.com/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="git" scheme="https://jscoder.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>11 月的碎碎念</title>
    <link href="https://jscoder.com/2020/11/29/anything/jscoder/"/>
    <id>https://jscoder.com/2020/11/29/anything/jscoder/</id>
    <published>2020-11-29T13:33:36.000Z</published>
    <updated>2021-07-20T14:53:34.155Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;ol&gt;
&lt;li&gt;&lt;p&gt;启用 jscoder.com 域名&lt;/p&gt;
&lt;p&gt;一直对现在的域名（aocoding.com）不是非常满意，但是又没有合适的域名。最近把 jscoder.com 续费10年，长期使用。希望自己多多努力，产出文章，不负自己的 money
        
      
    
    </summary>
    
    
      <category term="编码点滴" scheme="https://jscoder.com/categories/%E7%BC%96%E7%A0%81%E7%82%B9%E6%BB%B4/"/>
    
    
  </entry>
  
  <entry>
    <title>vue3 h5 脚手架</title>
    <link href="https://jscoder.com/2020/09/21/front-end/vue3-h5/"/>
    <id>https://jscoder.com/2020/09/21/front-end/vue3-h5/</id>
    <published>2020-09-21T14:22:22.000Z</published>
    <updated>2021-07-20T14:53:34.155Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;vue 3 终于发布了正式版。&lt;/p&gt;
&lt;p&gt;也把自己用了很久的 h5
        
      
    
    </summary>
    
    
      <category term="前端" scheme="https://jscoder.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="vue" scheme="https://jscoder.com/tags/vue/"/>
    
  </entry>
  
</feed>
